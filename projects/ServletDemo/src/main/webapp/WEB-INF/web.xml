<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd"
         version="3.0">

    <!-- ======================================== Servlet Configuration ===========================================  -->

    <servlet>
        <servlet-name>SquareServlet</servlet-name>
        <servlet-class>com.example.controllers.SquareServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>HomeServlet</servlet-name>
        <servlet-class>com.example.controllers.HomeServlet</servlet-class>

        <!-- ============= Servlet Config Configuration =============  -->

        <init-param>
            <param-name>welcomeMessage</param-name>
            <param-value>Welcome to Servlet Demo!</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.example.controllers.LoginServlet</servlet-class>

        <!-- ============= Servlet Config Configuration =============  -->

        <init-param>
            <param-name>failedLoginMessage</param-name>
            <param-value>Invalid username or password</param-value>
        </init-param>
        <init-param>
            <param-name>failedLoginRequestDispatcherPath</param-name>
            <param-value>/index.jsp</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>CalculateServlet</servlet-name>
        <servlet-class>com.example.controllers.CalculateServlet</servlet-class>
    </servlet>


    <servlet>
        <servlet-name>LogoutServlet</servlet-name>
        <servlet-class>com.example.controllers.LogoutServlet</servlet-class>

        <!-- ============= Servlet Config Configuration =============  -->

        <init-param>
            <param-name>redirectURL</param-name>
            <param-value>/</param-value>
        </init-param>
    </servlet>

    <!-- ==================================== Servlet Mapping Configuration =======================================  -->

    <servlet-mapping>
        <servlet-name>HomeServlet</servlet-name>
        <url-pattern>/home</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CalculateServlet</servlet-name>
        <url-pattern>/calculate</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>LogoutServlet</servlet-name>
        <url-pattern>/logout</url-pattern>
    </servlet-mapping>

    <!-- ==================================== Servlet Context Configuration =======================================  -->

    <context-param>
        <param-name>applicationPropertiesFilePath</param-name>
        <param-value>/WEB-INF/application.properties</param-value>
    </context-param>

    <context-param>
        <param-name>username</param-name>
        <param-value>admin</param-value>
    </context-param>

    <context-param>
        <param-name>password</param-name>
        <param-value>admin@123</param-value>
    </context-param>

    <!-- ========================================== Filters Configuration =========================================  -->

    <filter>
        <filter-name>LoggingFilter</filter-name>
        <filter-class>com.example.filters.LoggingFilter</filter-class>
    </filter>

    <filter>
        <filter-name>AuthenticationFilter</filter-name>
        <filter-class>com.example.filters.AuthenticationFilter</filter-class>
    </filter>

    <!-- ==================================== Filters Mapping Configuration =======================================  -->

    <!--
        The order of filter will be based on the order in which <filter-mapping/> is defined for each pattern
        Example: For /home pattern LoggingFilter will be applied before AuthenticationFilter
    -->
    <filter-mapping>
        <filter-name>LoggingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>AuthenticationFilter</filter-name>
        <url-pattern>/home</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>AuthenticationFilter</filter-name>
        <url-pattern>/user</url-pattern>
    </filter-mapping>

    <!-- ======================================== Listeners Configuration =========================================  -->

    <!-- ====================== Servlet Context Listeners =========================  -->

    <listener>
        <listener-class>com.example.listeners.ServletContextListenerDemo</listener-class>
    </listener>

    <!-- ====================== Servlet Request Listeners =========================  -->

    <listener>
        <listener-class>com.example.listeners.ServletRequestListenerDemo</listener-class>
    </listener>

    <listener>
        <listener-class>com.example.listeners.ServletRequestAttributeListenerDemo</listener-class>
    </listener>

    <!-- ======================== Http Session Listeners =========================  -->

    <listener>
        <listener-class>com.example.listeners.HttpSessionListenerDemo</listener-class>
    </listener>

    <listener>
        <listener-class>com.example.listeners.HttpSessionAttributeListenerDemo</listener-class>
    </listener>

    <listener>
        <listener-class>com.example.listeners.HttpSessionActivationListenerDemo</listener-class>
    </listener>

    <listener>
        <listener-class>com.example.listeners.HttpSessionBindingListenerDemo</listener-class>
    </listener>



<!--    <session-config>-->
<!--        <session-timeout>30</session-timeout>-->
<!--    </session-config>-->

    <!-- =================================== Error Page Mapping Configuration =====================================  -->

    <!--
        This mapping specifies that whenever there is a 404, 401 error or any Exception is raised by the server,
        the JSP page mapping mentioned below will be used to handle such error or exception
    -->

    <!--  Display this page in case of 404 error  -->

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/views/error404.jsp</location>
    </error-page>

    <!--  Display this page in case of 401 error  -->

    <error-page>
        <error-code>401</error-code>
        <location>/WEB-INF/views/error.jsp</location>
    </error-page>

    <!--  Display this page in case any Exception has been raised  -->

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/WEB-INF/views/error.jsp</location>
    </error-page>

    <!-- ============================================ Welcome File ================================================  -->

    <!-- Display this file in response to the root path : '/'   -->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Private contents</web-resource-name>
            <url-pattern>/private/*</url-pattern>
        </web-resource-collection>
        <auth-constraint />
    </security-constraint>

</web-app>
